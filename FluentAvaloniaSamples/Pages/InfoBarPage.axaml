<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:ui="clr-namespace:FluentAvalonia.UI.Controls;assembly=FluentAvalonia"
             xmlns:local="using:FluentAvaloniaSamples"
             xmlns:pg="clr-namespace:FluentAvaloniaSamples.Pages;assembly=FluentAvaloniaSamples"
             mc:Ignorable="d" d:DesignWidth="1000"
             x:Class="FluentAvaloniaSamples.Pages.InfoBarPage">
    <ScrollViewer HorizontalScrollBarVisibility="Disabled"
				  Padding="10">
        <StackPanel Spacing="5">
            
            <TextBlock Text="{Binding Header}" TextWrapping="Wrap" />

            <local:ControlExample Header="A closable InfoBar with options to change its Severity."
                                  ShowDocs="False"
                                  DynamicXamlTarget="{Binding #Bar1}"
                                  DynamicXamlProperties="IsOpen;Severity;Title;Message">
                <ui:InfoBar Name="Bar1" 
                            Title="Title" 
                            Message="Essential app message for your users to be informed of, acknowledge, or take action on."
                            IsOpen="True"
                            Severity="{Binding #SevList1.SelectedItem, Mode=TwoWay}"/>

                <local:ControlExample.Options>
                    <StackPanel>
                        <CheckBox Content="Is Open" IsChecked="{Binding #Bar1.IsOpen, Mode=TwoWay}" />
                        <TextBlock Text="Severity" />
                        <ComboBox Name="SevList1" Items="{Binding SeverityList}" HorizontalAlignment="Stretch" />
                    </StackPanel>
                </local:ControlExample.Options>
            </local:ControlExample>

            <local:ControlExample Header="A closable InfoBar with a long or short message and various buttons"
                                  ShowDocs="False"
                                  XamlSource="{Binding Bar2XamlSource}"
                                  >
                <ui:InfoBar Name="Bar2"
                            Title="Title"
                            Message="{Binding ActiveMessage}"
                            IsOpen="{Binding Bar2IsOpen, Mode=TwoWay}" />

                <local:ControlExample.Options>
                    <StackPanel>
                        <CheckBox Content="Is Open" IsChecked="{Binding Bar2IsOpen, Mode=TwoWay}" />
                        <TextBlock Text="Message Length" />
                        <ComboBox Name="MessType" HorizontalAlignment="Stretch"
                                  SelectedIndex="{Binding MessageType}">
                            <ComboBoxItem Content="Long" />
                            <ComboBoxItem Content="Short" />
                        </ComboBox>
                        <TextBlock Text="Action Button" />
                        <ComboBox Name="ButtonType" HorizontalAlignment="Stretch"
                                  SelectedIndex="{Binding ButtonType}">
                            <ComboBoxItem Content="None" />
                            <ComboBoxItem Content="Button" />
                            <ComboBoxItem Content="Hyperlink" />
                        </ComboBox>
                    </StackPanel>
                </local:ControlExample.Options>
            </local:ControlExample>

            <local:ControlExample Header="A closable InfoBar with options to display the close button and icon"
                                  ShowDocs="False"
                                  DynamicXamlTarget="{Binding #Bar3}"
                                  DynamicXamlProperties="IsOpen;IsIconVisible;IsClosable;Title;Message"
                                  >
                <ui:InfoBar Name="Bar3"
                            Title="Title"
                            Message="Essential app message for your users to be informed of, acknowledge, or take action on."
                            IsOpen="True" />

                <local:ControlExample.Options>
                    <StackPanel>
                        <CheckBox Content="Is Open" IsChecked="{Binding #Bar3.IsOpen, Mode=TwoWay}" />
                        <CheckBox Content="Is Icon Visible" IsChecked="{Binding #Bar3.IsIconVisible, Mode=TwoWay}" />
                        <CheckBox Content="Is Closable" IsChecked="{Binding #Bar3.IsClosable, Mode=TwoWay}" />
                    </StackPanel>
                </local:ControlExample.Options>
            </local:ControlExample>


            <local:ControlExample Header="InfoBar API in action"
                                  TargetType="InfoBar">
                <ui:InfoBar Name="Bar4"
                            Title="Title"
                            Message="Message"
                            IsOpen="True"
                            Severity="{Binding #SevList2.SelectedItem, Mode=TwoWay}">
                    <CheckBox Content="Custom Content" IsVisible="{Binding #Bar4CustomContent.IsChecked}" />
                </ui:InfoBar>

                <local:ControlExample.Options>
                    <StackPanel>
                        <CheckBox Content="IsOpen" IsChecked="{Binding #Bar4.IsOpen, Mode=TwoWay}" />
                        <CheckBox Content="IsIconVisible" IsChecked="{Binding #Bar4.IsIconVisible, Mode=TwoWay}" />
                        <CheckBox Content="IsClosable" IsChecked="{Binding #Bar4.IsClosable, Mode=TwoWay}" />
                        <CheckBox Content="Has Custom Content" Name="Bar4CustomContent"/>
                        <CheckBox Content="Custom Background Color" Name="CustomBGCheck"
                                  Command="{Binding $parent[pg:InfoBarPage].SetCustomBackground}"/>

                        <TextBlock Text="Icon" />
                        <ComboBox Name="Bar4IconType"
                                  HorizontalAlignment="Stretch"
                                  SelectedIndex="0">
                            <ComboBoxItem Content="Default Icon" />
                            <ComboBoxItem Content="Custom Icon" />
                        </ComboBox>

                        <ui:Button Content="Set Foreground" Margin="0 5" 
                                   Name="Bar4ForegroundButton"
                                   Command="{Binding $parent[pg:InfoBarPage].SetForeground}"/>

                        <TextBlock Text="Severity" />
                        <ComboBox Name="SevList2" Items="{Binding SeverityList}" HorizontalAlignment="Stretch" />

                        <TextBlock Text="Title" />
                        <TextBox HorizontalAlignment="Stretch" Text="{Binding #Bar4.Title, Mode=TwoWay}" />
                        
                        <TextBlock Text="Message" />
                        <TextBox HorizontalAlignment="Stretch" 
                                 MaxWidth="250"
                                 Text="{Binding #Bar4.Message, Mode=TwoWay}"
                                 AcceptsReturn="True"/>
                        <TextBlock Text="Action Button" />
                        <ComboBox Name="Bar4ButtonType"
                                  HorizontalAlignment="Stretch"
                                  SelectedIndex="0">
                            <ComboBoxItem Content="None" />
                            <ComboBoxItem Content="Button" />
                            <ComboBoxItem Content="Hyperlink" />
                            <ComboBoxItem Content="Right Aligned Button" />
                            <ComboBoxItem Content="Right Aligned Hyperlink" />
                        </ComboBox>   
                    </StackPanel>
                </local:ControlExample.Options>
            </local:ControlExample>

        </StackPanel>
    </ScrollViewer>
</UserControl>
