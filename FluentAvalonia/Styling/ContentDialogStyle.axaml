<Styles xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:sys="clr-namespace:System;assembly=netstandard"
             xmlns:ui="clr-namespace:FluentAvalonia.UI.Controls;assembly=FluentAvalonia"
             xmlns:media="clr-namespace:FluentAvalonia.UI.Media;assembly=FluentAvalonia">

    <Styles.Resources>
        <Thickness x:Key="ContentDialogBorderWidth">1</Thickness>
        <x:Double x:Key="ContentDialogMinWidth">320</x:Double>
        <x:Double x:Key="ContentDialogMaxWidth">548</x:Double>
        <x:Double x:Key="ContentDialogMinHeight">184</x:Double>
        <x:Double x:Key="ContentDialogMaxHeight">756</x:Double>
        <GridLength x:Key="ContentDialogButtonSpacing">8</GridLength>
        <Thickness x:Key="ContentDialogTitleMargin">0,0,0,12</Thickness>
        <Thickness x:Key="ContentDialogPadding">24</Thickness>

        <!--<x:Double x:Key="ContentDialogMinWidth">320</x:Double>
        <x:Double x:Key="ContentDialogMaxWidth">548</x:Double>
        <x:Double x:Key="ContentDialogMinHeight">184</x:Double>
        <x:Double x:Key="ContentDialogMaxHeight">756</x:Double>
        <x:Double x:Key="ContentDialogButtonMinWidth">130</x:Double>
        <x:Double x:Key="ContentDialogButtonMaxWidth">202</x:Double>
        <x:Double x:Key="ContentDialogButtonMinHeight">32</x:Double>
        <x:Double x:Key="ContentDialogButtonHeight">32</x:Double>
        <x:Double x:Key="ContentDialogTitleMaxHeight">56</x:Double>
        <Thickness x:Key="ContentDialogBorderWidth">1</Thickness>
        <Thickness x:Key="ContentDialogButton1HostMargin">0,0,4,0</Thickness>
        <Thickness x:Key="ContentDialogButton2HostMargin">0,0,0,0</Thickness>
        <Thickness x:Key="ContentDialogContentMargin">0,0,0,0</Thickness>
        <Thickness x:Key="ContentDialogContentScrollViewerMargin">0,0,0,0</Thickness>
        <Thickness x:Key="ContentDialogTitleMargin">0,0,0,12</Thickness>
        <Thickness x:Key="ContentDialogPadding">24,18,24,24</Thickness>
        <Thickness x:Key="ContentDialogCommandSpaceMargin">0,24,0,0</Thickness>-->
    </Styles.Resources>

    <!--Default ContentDialog Style-->
    <Style Selector="ui|ContentDialog">
        <Setter Property="Foreground" Value="{DynamicResource ContentDialogForeground}"/>
        <Setter Property="Background" Value="{DynamicResource ContentDialogBackground}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ContentDialogBorderBrush}"/>
        <Setter Property="BorderThickness" Value="{DynamicResource ContentDialogBorderWidth}" />
        <Setter Property="Template">
            <ControlTemplate>
                <Border Name="Container">
                    <!-- ContentDialog always displays in OverlayLayer which is in front of the
                    AdornerLayer, so we have to supply our own AL so we still have focus visuals                     
                    -->
                    <VisualLayerManager IsPopup="True">
                        <Panel Name="LayoutRoot" Background="{DynamicResource ContentDialogSmokeFill}">
                            <Border Name="BackgroundElement" 
                                    Background="{TemplateBinding Background}"
                                    BorderThickness="{StaticResource ContentDialogBorderWidth}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    CornerRadius="{StaticResource OverlayCornerRadius}"
                                    MinWidth="{StaticResource ContentDialogMinWidth}"
                                    MaxWidth="{StaticResource ContentDialogMaxWidth}"
                                    MinHeight="{StaticResource ContentDialogMinHeight}"
                                    MaxHeight="{StaticResource ContentDialogMaxHeight}"
                                    HorizontalAlignment="Center" BoxShadow="0 8 32 0 #66000000" >
                                <!-- Shadow only works in light mode, couldn't make it a resource to bind to it,
                                 nor could I declare it out & set its properties individually-->

                                <!-- if this border isn't here, dialog space displays outside of corner radius at top
                                if we put ClipToBounds=True on BackgroundElement above, it clips the shadow -->
                                <Border ClipToBounds="True" CornerRadius="{DynamicResource OverlayCornerRadius}">
                                    <Grid Name="DialogSpace" ClipToBounds="True"
                                      RowDefinitions="*,Auto">
                                        <ScrollViewer Name="ContentScrollViewer"
                                                      HorizontalScrollBarVisibility="Disabled"
                                                      VerticalScrollBarVisibility="Auto"
                                                      Margin="{StaticResource ContentDialogContentScrollViewerMargin}">
                                            <Border Background="{DynamicResource ContentDialogTopOverlay}"
                                                    Padding="{DynamicResource ContentDialogPadding}">
                                                <Grid RowDefinitions="Auto,*" >
                                                    <Grid.Styles>
                                                        <!--Make sure text wrapping is on-->
                                                        <Style Selector="TextBlock">
                                                            <Setter Property="TextWrapping" Value="Wrap"/>
                                                        </Style>
                                                    </Grid.Styles>
                                                    <ContentControl Name="Title"
                                                                    Margin="{StaticResource ContentDialogTitleMargin}"
                                                                    Content="{TemplateBinding Title}"
                                                                    ContentTemplate="{TemplateBinding TitleTemplate}"
                                                                    FontSize="20"
                                                                    FontFamily="Default"
                                                                    FontWeight="Normal"
                                                                    Foreground="{TemplateBinding Foreground}"
                                                                    HorizontalAlignment="Left"
                                                                    VerticalAlignment="Top">
                                                        <ContentControl.Template>
                                                            <ControlTemplate>
                                                                <ContentPresenter Content="{TemplateBinding Content}"
                                                                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                                  Margin="{TemplateBinding Padding}"
                                                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                            </ControlTemplate>
                                                        </ContentControl.Template>
                                                    </ContentControl>

                                                    <ContentPresenter Name="Content" ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                      Content="{TemplateBinding Content}"
                                                                      TextBlock.FontSize="{StaticResource ControlContentThemeFontSize}"
                                                                      TextBlock.FontFamily="{StaticResource ContentControlThemeFontFamily}"
                                                                      Margin="{StaticResource ContentDialogContentMargin}"
                                                                      TextBlock.Foreground="{TemplateBinding Foreground}"
                                                                      Grid.Row="1"/>
                                                </Grid>
                                            </Border>
                                        </ScrollViewer>
                                        <Border Padding="{StaticResource ContentDialogPadding}"
                                                Grid.Row="1" HorizontalAlignment="Stretch"
                                                VerticalAlignment="Bottom">
                                            <Grid Name="CommandSpace"
                                                  ui:NavHelpers.XYFocusKeyboardNavigation="True">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition />
                                                    <ColumnDefinition Width="0.5*"/>
                                                    <ColumnDefinition Width="0.5*"/>
                                                    <ColumnDefinition/>
                                                </Grid.ColumnDefinitions>
                                                <ui:Button Name="PrimaryButton"
                                                           Content="{TemplateBinding PrimaryButtonText}"
                                                           IsEnabled="{TemplateBinding IsPrimaryButtonEnabled}"
                                                           HorizontalAlignment="Stretch"
                                                           VerticalAlignment="Stretch"
                                                           HorizontalContentAlignment="Center"
                                                           VerticalContentAlignment="Center" />
                                                <ui:Button Name="SecondaryButton"
                                                        Content="{TemplateBinding SecondaryButtonText}"
                                                        IsEnabled="{TemplateBinding IsSecondaryButtonEnabled}"
                                                        HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                                           HorizontalContentAlignment="Center"
                                                           VerticalContentAlignment="Center" />
                                                <ui:Button Name="CloseButton"
                                                        Content="{TemplateBinding CloseButtonText}"
                                                        HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                                           HorizontalContentAlignment="Center"
                                                           VerticalContentAlignment="Center" />
                                            </Grid>
                                        </Border>
                                    </Grid>
                                </Border>
                            </Border>

                        </Panel>
                    </VisualLayerManager>
                </Border>
            </ControlTemplate>
        </Setter>
    </Style>
    <Style Selector="ui|ContentDialog /template/ Border#BackgroundElement">
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>
    <Style Selector="ui|ContentDialog /template/ Button#PrimaryButton">
        <Setter Property="Margin" Value="0,0,2,0" />
        <Setter Property="Grid.Column" Value="0"/>
    </Style>
    <Style Selector="ui|ContentDialog /template/ Button#SecondaryButton">
        <Setter Property="Margin" Value="2,0,2,0" />
        <Setter Property="Grid.Column" Value="1"/>
        <Setter Property="Grid.ColumnSpan" Value="2"/>
    </Style>
    <Style Selector="ui|ContentDialog /template/ Button#CloseButton">
        <Setter Property="Margin" Value="2,0,0,0" />
        <Setter Property="Grid.Column" Value="3"/>
    </Style>
    
    <!--Handle hidden dialog-->
    <Style Selector="ui|ContentDialog:hidden /template/ Panel#LayoutRoot">
        <Setter Property="IsVisible" Value="True"/>
        <!--<Setter Property="IsHitTestVisible" Value="False"/>-->
        <Style.Animations>
            <Animation Duration="00:00:00.083" FillMode="Forward">
                <KeyFrame Cue="0%">
                    <Setter Property="Opacity" Value="1.0"/>
                </KeyFrame>
                <KeyFrame Cue="100%">
                    <Setter Property="Opacity" Value="0.0"/>
                </KeyFrame>
            </Animation>
        </Style.Animations>
    </Style>
    <Style Selector="ui|ContentDialog:hidden /template/ Border#Container">
        <Style.Animations>
            <Animation Duration="00:00:00.5" FillMode="Forward">
                <KeyFrame Cue="0%">
                    <Setter Property="ScaleTransform.ScaleX" Value="1.0"/>
                    <Setter Property="ScaleTransform.ScaleY" Value="1.0"/>
                </KeyFrame>
                <KeyFrame Cue="100%" KeySpline="0.1,0.9 0.2,1.0">
                    <Setter Property="ScaleTransform.ScaleX" Value="1.05"/>
                    <Setter Property="ScaleTransform.ScaleY" Value="1.05"/>
                </KeyFrame>
            </Animation>
        </Style.Animations>
    </Style>
    
    <!--Handle open dialog-->
    <Style Selector="ui|ContentDialog:open /template/ Panel#LayoutRoot">
        <Setter Property="IsVisible" Value="True"/>
        <Style.Animations>
            <Animation Duration="00:00:00.167" FillMode="Forward">
                <KeyFrame Cue="0%">
                    <Setter Property="Opacity" Value="0.0"/>
                </KeyFrame>
                <KeyFrame Cue="100%">
                    <Setter Property="Opacity" Value="1.0"/>
                </KeyFrame>
            </Animation>
        </Style.Animations>
    </Style>
    <Style Selector="ui|ContentDialog:open /template/ Border#Container">
        <Style.Animations>
            <Animation Duration="00:00:00.5" FillMode="Forward">
                <KeyFrame Cue="0%">
                    <Setter Property="ScaleTransform.ScaleX" Value="1.05"/>
                    <Setter Property="ScaleTransform.ScaleY" Value="1.05"/>
                </KeyFrame>
                <KeyFrame Cue="100%" KeySpline="0.1,0.9 0.2,1.0">
                    <Setter Property="ScaleTransform.ScaleX" Value="1.00"/>
                    <Setter Property="ScaleTransform.ScaleY" Value="1.00"/>
                </KeyFrame>
            </Animation>
        </Style.Animations>
    </Style>
    
    <!--Handle showing smoke layer-->
    <Style Selector="ui|ContentDialog:nosmokelayer /template/ Panel#LayoutRoot">
        <Setter Property="Background" Value="{x:Null}"/>
    </Style>
    
    <!--Handle FullDialogSizing-->
    <Style Selector="ui|ContentDialog:fullsize /template/ Border#BackgroundElement">
        <Setter Property="VerticalAlignment" Value="Stretch"/>
    </Style>
    
    <!--Button States-->
    <!--No buttons visible, probably never the case-->
    <Style Selector="ui|ContentDialog:nobuttons /template/ Grid#CommandSpace">
        <Setter Property="IsVisible" Value="False"/>
    </Style>
    
    <!--Primary Button Only-->
    <Style Selector="ui|ContentDialog:primaryonly /template/ Button#PrimaryButton">
        <Setter Property="Grid.Column" Value="2"/>
        <Setter Property="Grid.ColumnSpan" Value="2"/>
        <Setter Property="Margin" Value="2 0 0 0"/>
    </Style>
    <Style Selector="ui|ContentDialog:primaryonly /template/ Button#SecondaryButton">
        <Setter Property="IsVisible" Value="False"/>
    </Style>
    <Style Selector="ui|ContentDialog:primaryonly /template/ Button#CloseButton">
        <Setter Property="IsVisible" Value="False"/>
    </Style>
    
    <!--Secondary Button Only-->
    <Style Selector="ui|ContentDialog:secondaryonly /template/ Button#SecondaryButton">
        <Setter Property="Grid.Column" Value="2"/>
        <Setter Property="Grid.ColumnSpan" Value="2"/>
        <Setter Property="Margin" Value="2 0 0 0"/>
    </Style>
    <Style Selector="ui|ContentDialog:secondaryonly /template/ Button#PrimaryButton">
        <Setter Property="IsVisible" Value="False"/>
    </Style>
    <Style Selector="ui|ContentDialog:secondaryonly /template/ Button#CloseButton">
        <Setter Property="IsVisible" Value="False"/>
    </Style>

    <!--Close Button Only-->
    <Style Selector="ui|ContentDialog:closeonly /template/ Button#CloseButton">
        <Setter Property="Grid.Column" Value="2"/>
        <Setter Property="Grid.ColumnSpan" Value="2"/>
        <Setter Property="Margin" Value="2 0 0 0"/>
    </Style>
    <Style Selector="ui|ContentDialog:closeonly /template/ Button#PrimaryButton">
        <Setter Property="IsVisible" Value="False"/>
    </Style>
    <Style Selector="ui|ContentDialog:closeonly /template/ Button#SecondaryButton">
        <Setter Property="IsVisible" Value="False"/>
    </Style>

    <!--Primary and Secondary Buttons-->
    <Style Selector="ui|ContentDialog:primarysecondary /template/ Button#PrimaryButton">
        <Setter Property="Grid.ColumnSpan" Value="2"/>
        <Setter Property="IsVisible" Value="True" />
    </Style>
    <Style Selector="ui|ContentDialog:primarysecondary /template/ Button#SecondaryButton">
        <Setter Property="Grid.Column" Value="2"/>
        <Setter Property="Grid.ColumnSpan" Value="2"/>
        <Setter Property="Margin" Value="2 0 0 0"/>
        <Setter Property="IsVisible" Value="True" />
    </Style>
    <Style Selector="ui|ContentDialog:primarysecondary /template/ Button#CloseButton">
        <Setter Property="IsVisible" Value="False"/>
    </Style>

    <!--Primary and Close Buttons-->
    <Style Selector="ui|ContentDialog:primaryclose /template/ Button#PrimaryButton">
        <Setter Property="Grid.ColumnSpan" Value="2"/>
        <Setter Property="IsVisible" Value="True" />
    </Style>
    <Style Selector="ui|ContentDialog:primaryclose /template/ Button#CloseButton">
        <Setter Property="Grid.Column" Value="2"/>
        <Setter Property="Grid.ColumnSpan" Value="2"/>
        <Setter Property="Margin" Value="2 0 0 0"/>
        <Setter Property="IsVisible" Value="True" />
    </Style>
    <Style Selector="ui|ContentDialog:primaryclose /template/ Button#SecondaryButton">
        <Setter Property="IsVisible" Value="False"/>
    </Style>

    <!--Secondary and Close Buttons-->
    <Style Selector="ui|ContentDialog:secondaryclose /template/ Button#SecondaryButton">
        <Setter Property="Grid.ColumnSpan" Value="2"/>
        <Setter Property="Grid.Column" Value="0"/>
        <Setter Property="Margin" Value="0 0 2 0"/>
        <Setter Property="IsVisible" Value="True" />
    </Style>
    <Style Selector="ui|ContentDialog:secondaryclose /template/ Button#CloseButton">
        <Setter Property="Grid.Column" Value="2"/>
        <Setter Property="Grid.ColumnSpan" Value="2"/>
        <Setter Property="Margin" Value="2 0 0 0"/>
        <Setter Property="IsVisible" Value="True" />
    </Style>
    <Style Selector="ui|ContentDialog:secondaryclose /template/ Button#PrimaryButton">
        <Setter Property="IsVisible" Value="False"/>
    </Style>
    
</Styles>