<Styles xmlns="https://github.com/avaloniaui"        
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:ui="clr-namespace:FluentAvalonia.UI.Controls;assembly=FluentAvalonia">
    <Design.PreviewWith>
        <Border Padding="10">
            <ui:ColorPicker />
        </Border>
    </Design.PreviewWith>

    <Styles.Resources>
    </Styles.Resources>

    <Style Selector="ToggleButton.ColorPickerMore">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource SystemControlForegroundBaseHighBrush}" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0"/>
    </Style>
    <Style Selector="ToggleButton.ColorPickerMore:pointerover /template/ ContentPresenter">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="TextBlock.Foreground" Value="{DynamicResource SystemControlForegroundBaseMediumBrush}" />
        <Setter Property="BorderBrush" Value="Transparent" />
    </Style>
    <Style Selector="ToggleButton.ColorPickerMore:pressed /template/ ContentPresenter">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="TextBlock.Foreground" Value="{DynamicResource SystemControlForegroundBaseMediumBrush}" />
        <Setter Property="BorderBrush" Value="Transparent" />
    </Style>
    <Style Selector="ToggleButton.ColorPickerMore:checked /template/ ContentPresenter">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="TextBlock.Foreground" Value="{DynamicResource SystemControlForegroundBaseHighBrush}" />
        <Setter Property="BorderBrush" Value="Transparent" />
    </Style>
    <Style Selector="ToggleButton.ColorPickerMore:disabled /template/ ContentPresenter">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="TextBlock.Foreground" Value="{DynamicResource SystemControlForegroundBaseMediumLowBrush}" />
        <Setter Property="BorderBrush" Value="Transparent" />
    </Style>
    

    <Style Selector="ui|ColorPicker">
        <Setter Property="MinWidth" Value="312" />
        <Setter Property="MaxWidth" Value="92" />
        <Setter Property="Template">
            <ControlTemplate>
                <StackPanel Margin="3">
                    <DockPanel>
                        <Grid DockPanel.Dock="Right" RowDefinitions="*,*">
                            <Border Name="TransparentBackground" Grid.RowSpan="2" Margin="12 0 0 0" Width="44" />
                            <Border Name="PreviousColorPreview" Background="Red" Margin="12 0 0 0" Width="44" CornerRadius="{StaticResource ControlCornerRadius}" />
                            <Border Name="CurrentColorPreview" Background="Beige" Margin="12 0 0 0" Width="44" Grid.Row="1" CornerRadius="{StaticResource ControlCornerRadius}" />
                            <Border BorderBrush="{DynamicResource SystemControlHighlightBaseLowBrush}" BorderThickness="2" Grid.RowSpan="2" Margin="12 0 0 0" />
                        </Grid>
                        <ui:ColorSpectrum Name="ColorSpectrum"
                                          DockPanel.Dock="Left"
                                          MaxWidth="336"
                                          MaxHeight="336"
                                          MinWidth="200" MinHeight="200"
                                          Shape="Spectrum"
                                          Component="Hue" />

                    </DockPanel>
                    <Panel Margin="0 12 0 0" Name="ThirdComponentSliderPanel">
                        <!--<Border Height="11" VerticalAlignment="Center" CornerRadius="{DynamicResource ControlCornerRadius}" />-->
                        <ui:ColorRamp Name="ThirdComponentSlider" Component="Hue" />
                    </Panel>
                    <Panel Margin="0 12 0 0" Name="AlphaSliderPanel">
                        <ui:ColorRamp Name="AlphaSlider" Component="Alpha" />
                    </Panel>
                    <ToggleButton Name="MoreButton" Classes="ColorPickerMore" MinHeight="32" MinWidth="120" Margin="0 12 0 0"
                                  Padding="0" HorizontalAlignment="Right" HorizontalContentAlignment="Right">
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="0 5 0 7">
                            <TextBlock Text="More" VerticalAlignment="Center" />
                            <ui:SymbolIcon Name="MoreButtonIcon" VerticalAlignment="Center" />
                            <!--<ui:IconSourceElement Name="MoreButtonIcon" Width="20" Height="20" VerticalAlignment="Center" />-->
                        </StackPanel>
                    </ToggleButton>
                    <Grid Name="TextEntryGrid" ColumnDefinitions="*,*" RowDefinitions="Auto,Auto">
                        <ComboBox Name="ColorTypeSelector" Width="120" Margin="0 12 0 0" SelectedIndex="0">
                            <ComboBoxItem Content="RGB" />
                            <ComboBoxItem Content="HSV" />
                        </ComboBox>
                        <StackPanel Grid.Row="1" Grid.ColumnSpan="2">
                            <StackPanel>
                                <StackPanel Orientation="Horizontal" Margin="0 12 0 0">
                                    <TextBox Name="Comp1TB" Width="120" />
                                    <TextBlock Name="Comp1Label" Text="Red" VerticalAlignment="Center" Margin="8 0 0 0" />
                                </StackPanel>
                                <StackPanel Orientation="Horizontal" Margin="0 12 0 0">
                                    <TextBox Name="Comp2TB" Width="120" />
                                    <TextBlock Name="Comp2Label" Text="Green" VerticalAlignment="Center" Margin="8 0 0 0" />
                                </StackPanel>
                                <StackPanel Orientation="Horizontal" Margin="0 12 0 0">
                                    <TextBox Name="Comp3TB" Width="120" />
                                    <TextBlock Name="Comp3Label" Text="Blue" VerticalAlignment="Center" Margin="8 0 0 0" />
                                </StackPanel>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" Margin="0 12 0 0">
                                <TextBox Name="AlphaTB" Width="120" />
                                <TextBlock Name="AlphaLabel" Text="Opacity" VerticalAlignment="Center" Margin="8 0 0 0" />
                            </StackPanel>
                        </StackPanel>
                        <TextBox Name="HexBox" Grid.Column="1" Margin="0 12 0 0" Width="132" HorizontalAlignment="Right"
                                 VerticalAlignment="Top">
                            <TextBox.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Header="#RRGGBB" Command="{Binding $parent[ui:ColorPicker].OnHexTextContextMenuItemClick}" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Header}"/>
                                    <MenuItem Header="#AARRGGBB" Command="{Binding $parent[ui:ColorPicker].OnHexTextContextMenuItemClick}" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Header}" />
                                    <MenuItem Header="rgb( r, g, b )" Command="{Binding $parent[ui:ColorPicker].OnHexTextContextMenuItemClick}" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Header}" />
                                    <MenuItem Header="rgba( r, g, b, a )" Command="{Binding $parent[ui:ColorPicker].OnHexTextContextMenuItemClick}" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Header}" />
                                    <MenuItem Header="-" />
                                    <MenuItem x:Name="TextBoxContextMenuCutItem" Header="Cut" Command="{Binding $parent[TextBox].Cut}" IsEnabled="{Binding $parent[TextBox].CanCut}" InputGesture="{x:Static TextBox.CutGesture}" />
                                    <MenuItem x:Name="TextBoxContextMenuCopyItem" Header="Copy" Command="{Binding $parent[TextBox].Copy}" IsEnabled="{Binding $parent[TextBox].CanCopy}" InputGesture="{x:Static TextBox.CopyGesture}"/>
                                    <MenuItem x:Name="TextBoxContextMenuPasteItem" Header="Paste" Command="{Binding $parent[TextBox].Paste}" IsEnabled="{Binding $parent[TextBox].CanPaste}" InputGesture="{x:Static TextBox.PasteGesture}"/>
                                </ContextMenu>
                            </TextBox.ContextMenu>
                        </TextBox>
                    </Grid>
                    
                </StackPanel>                
            </ControlTemplate>
        </Setter>
    </Style>
    <Style Selector="ui|ColorPicker /template/ ToggleButton ui|SymbolIcon">
        <Setter Property="Symbol" Value="ChevronDown"/>
    </Style>
    <Style Selector="ui|ColorPicker /template/ ToggleButton:checked ui|SymbolIcon">
        <Setter Property="Symbol" Value="ChevronUp" />
    </Style>
    
</Styles>
