<Styles xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:sys="clr-namespace:System;assembly=netstandard"
             xmlns:ui="clr-namespace:FluentAvalonia.UI.Controls;assembly=FluentAvalonia"
             xmlns:aconv="using:Avalonia.Controls.Converters">

    <Design.PreviewWith>
        <Border Padding="50">
            <StackPanel Spacing="5">
                <SplitButton Content="hello" />
                <SplitButton Content="hello" IsEnabled="False" />

                <ToggleSplitButton Content="hello t" />
                <ToggleSplitButton Content="hello" IsEnabled="False" />
            </StackPanel>
        </Border>
    </Design.PreviewWith>
    
  
    <Styles.Resources>
        <Thickness x:Key="SplitButtonBorderThemeThickness">1</Thickness>
        <x:Double x:Key="SplitButtonSecondaryButtonSize">32</x:Double>
        <x:Double x:Key="SplitButtonPrimaryButtonSize">32</x:Double>

        <!-- Added to Avalonia version, not used in actual WinUI template -->
        <aconv:MarginMultiplierConverter x:Key="PrimaryButtonBorderMultiplier" Left="True" Top="True" Bottom="True" Indent="1" />
        <aconv:MarginMultiplierConverter x:Key="SecondaryButtonBorderMultiplier" Right="True" Top="True" Bottom="True" Indent="1" />
    </Styles.Resources>

    <Style Selector="SplitButton">
        <Setter Property="Background" Value="{DynamicResource SplitButtonBackground}" />
        <Setter Property="Foreground" Value="{DynamicResource SplitButtonForeground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource SplitButtonBorderBrush}" />
        <Setter Property="BorderThickness" Value="{DynamicResource SplitButtonBorderThemeThickness}" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontFamily" Value="{DynamicResource ContentControlThemeFontFamily}" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="FontSize" Value="{DynamicResource ControlContentThemeFontSize}" />
        <Setter Property="Padding" Value="{DynamicResource ButtonPadding}"/>
        <Setter Property="KeyboardNavigation.IsTabStop" Value="True" />
		<Setter Property="CornerRadius" Value="{DynamicResource ControlCornerRadius}" />
        <Setter Property="Template">
            <ControlTemplate>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <Button x:Name="PART_PrimaryButton"
                            Grid.Column="0"
                            MinWidth="{DynamicResource SplitButtonPrimaryButtonSize}"
                            Foreground="{TemplateBinding Foreground}"
                            Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness, Converter={StaticResource PrimaryButtonBorderMultiplier}}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Content="{TemplateBinding Content}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            Command="{TemplateBinding Command}"
                            CommandParameter="{TemplateBinding CommandParameter}"
                            FontFamily="{TemplateBinding FontFamily}"
                            FontSize="{TemplateBinding FontSize}"
                            FontWeight="{TemplateBinding FontWeight}"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                            Padding="{TemplateBinding Padding}"
                            Focusable="False"
                            KeyboardNavigation.IsTabStop="False" />

                    <Rectangle Name="SeparatorBorder"
                               Grid.Column="1"
                               Fill="{DynamicResource SplitButtonBorderBrushDivider}"
                               Width="1" />

                    <Button x:Name="PART_SecondaryButton"
                            Grid.Column="2"
                            MinWidth="{DynamicResource SplitButtonSecondaryButtonSize}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Foreground="{TemplateBinding Foreground}"
                            Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness, Converter={StaticResource SecondaryButtonBorderMultiplier}}"
                            Padding="0"
                            HorizontalContentAlignment="Center"
                            VerticalContentAlignment="Center"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Focusable="False"
                            KeyboardNavigation.IsTabStop="False">
                        <ui:SymbolIcon Symbol="ChevronDown" 
                                       FontSize="18" />
                    </Button>
                </Grid>
            </ControlTemplate>
        </Setter>
    </Style>

    <!-- Default overridable styles -->
    <Style Selector="SplitButton /template/ Button#PART_PrimaryButton">
        <Setter Property="CornerRadius" Value="{TemplateBinding CornerRadius, Converter={StaticResource LeftCornerRadiusFilterConverter}}" />
    </Style>
    <Style Selector="SplitButton /template/ Button#PART_SecondaryButton">
        <Setter Property="CornerRadius" Value="{TemplateBinding CornerRadius, Converter={StaticResource RightCornerRadiusFilterConverter}}" />        
    </Style>

    <!-- Primary and Secondary buttons PointerOver State -->
    <Style Selector="SplitButton /template/ Button#PART_PrimaryButton:pointerover /template/ ContentPresenter,
                     SplitButton /template/ Button#PART_SecondaryButton:pointerover /template/ ContentPresenter">
        <Setter Property="Border.Background" Value="{DynamicResource SplitButtonBackgroundPointerOver}" />
        <Setter Property="Border.BorderBrush" Value="{DynamicResource SplitButtonBorderBrushPointerOver}" />
        <Setter Property="Foreground" Value="{DynamicResource SplitButtonForegroundPointerOver}" />
    </Style>
    <Style Selector="SplitButton /template/ Button#PART_SecondaryButton:pointerover ui|SymbolIcon">
        <Setter Property="Foreground" Value="{DynamicResource SplitButtonForegroundPointerOver}" />
    </Style>

    <!-- Primary and Secondary buttons Pressed State -->
    <Style Selector="SplitButton /template/ Button#PART_PrimaryButton:pressed /template/ ContentPresenter,
                     SplitButton /template/ Button#PART_SecondaryButton:pressed /template/ ContentPresenter">
        <Setter Property="Border.Background" Value="{DynamicResource SplitButtonBackgroundPressed}" />
        <Setter Property="Border.BorderBrush" Value="{DynamicResource SplitButtonBorderBrushPressed}" />
        <Setter Property="Foreground" Value="{DynamicResource SplitButtonForegroundPressed}" />
    </Style>
    <Style Selector="SplitButton /template/ Button#PART_SecondaryButton:pressed ui|SymbolIcon">
        <Setter Property="Foreground" Value="{DynamicResource SplitButtonForegroundPressed}" />
    </Style>

    <!-- SplitButton Pressed State -->
    <Style Selector="SplitButton:pressed /template/ Button#PART_PrimaryButton /template/ ContentPresenter,
                     SplitButton:pressed /template/ Button#PART_SecondaryButton /template/ ContentPresenter,
                     SplitButton:pressed /template/ Border#SeparatorBorder">
        <Setter Property="Border.Background" Value="{DynamicResource SplitButtonBackgroundPressed}" />
        <Setter Property="Border.BorderBrush" Value="{DynamicResource SplitButtonBorderBrushPressed}" />
        <Setter Property="TextElement.Foreground" Value="{DynamicResource SplitButtonForegroundPressed}" />
    </Style>
    <Style Selector="SplitButton:pressed /template/ Button#PART_SecondaryButton ui|SymbolIcon">
        <Setter Property="Foreground" Value="{DynamicResource SplitButtonForegroundPressed}" />
    </Style>

    <!-- Primary and Secondary buttons Flyout Open State -->
    <Style Selector="SplitButton:flyout-open /template/ Button#PART_PrimaryButton /template/ ContentPresenter,
                     SplitButton:flyout-open /template/ Button#PART_SecondaryButton /template/ ContentPresenter,
                     SplitButton:flyout-open /template/ Border#SeparatorBorder">
        <Setter Property="Border.Background" Value="{DynamicResource SplitButtonBackgroundPressed}" />
        <Setter Property="Border.BorderBrush" Value="{DynamicResource SplitButtonBorderBrushPressed}" />
        <Setter Property="TextElement.Foreground" Value="{DynamicResource SplitButtonForegroundPressed}" />
    </Style>
    <Style Selector="SplitButton:flyout-open /template/ Button#PART_SecondaryButton ui|SymbolIcon">
        <Setter Property="Foreground" Value="{DynamicResource SplitButtonForegroundPressed}" />
    </Style>

    <!-- Disabled State -->
    <Style Selector="SplitButton:disabled /template/ Button#PART_PrimaryButton /template/ ContentPresenter,
                     SplitButton:disabled /template/ Button#PART_SecondaryButton /template/ ContentPresenter,
                     SplitButton:disabled /template/ Border#SeparatorBorder">
        <Setter Property="Border.Background" Value="{DynamicResource SplitButtonBackgroundDisabled}" />
        <Setter Property="Border.BorderBrush" Value="{DynamicResource SplitButtonBorderBrushDisabled}" />
        <Setter Property="TextElement.Foreground" Value="{DynamicResource SplitButtonForegroundDisabled}" />
    </Style>
    <Style Selector="SplitButton:disabled /template/ Button#PART_SecondaryButton ui|SymbolIcon">
        <Setter Property="Foreground" Value="{DynamicResource SplitButtonForegroundDisabled}" />
    </Style>

    <!-- Checked State -->
    <Style Selector="SplitButton:checked /template/ Button#PART_PrimaryButton /template/ ContentPresenter,
                     SplitButton:checked /template/ Button#PART_SecondaryButton /template/ ContentPresenter,
                     SplitButton:checked /template/ Border#SeparatorBorder">
        <Setter Property="Border.Background" Value="{DynamicResource SplitButtonBackgroundChecked}" />
        <Setter Property="Border.BorderBrush" Value="{DynamicResource SplitButtonBorderBrushChecked}" />
        <Setter Property="TextElement.Foreground" Value="{DynamicResource SplitButtonForegroundChecked}" />
    </Style>
    <Style Selector="SplitButton:checked /template/ Button#PART_SecondaryButton ui|SymbolIcon">
        <Setter Property="Foreground" Value="{DynamicResource SplitButtonForegroundChecked}" />
    </Style>

    <!-- Checked PointerOver State -->
    <Style Selector="SplitButton:checked /template/ Button#PART_PrimaryButton:pointerover /template/ ContentPresenter,
                     SplitButton:checked /template/ Button#PART_SecondaryButton:pointerover /template/ ContentPresenter">
        <Setter Property="Border.Background" Value="{DynamicResource SplitButtonBackgroundCheckedPointerOver}" />
        <Setter Property="Border.BorderBrush" Value="{DynamicResource SplitButtonBorderBrushCheckedPointerOver}" />
        <Setter Property="TextElement.Foreground" Value="{DynamicResource SplitButtonForegroundCheckedPointerOver}" />
    </Style>
    <Style Selector="SplitButton:checked /template/ Button#PART_SecondaryButton:pointerover ui|SymbolIcon">
        <Setter Property="Foreground" Value="{DynamicResource SplitButtonForegroundCheckedPointerOver}" />
    </Style>

    <!-- Checked Pressed State -->
    <Style Selector="SplitButton:checked /template/ Button#PART_PrimaryButton:pressed /template/ ContentPresenter,
                     SplitButton:checked /template/ Button#PART_SecondaryButton:pressed /template/ ContentPresenter">
        <Setter Property="Border.Background" Value="{DynamicResource SplitButtonBackgroundCheckedPressed}" />
        <Setter Property="Border.BorderBrush" Value="{DynamicResource SplitButtonBorderBrushCheckedPressed}" />
        <Setter Property="Foreground" Value="{DynamicResource SplitButtonForegroundCheckedPressed}" />
    </Style>
    <Style Selector="SplitButton:checked /template/ Button#PART_SecondaryButton:pressed ui|SymbolIcon">
        <Setter Property="Foreground" Value="{DynamicResource SplitButtonForegroundCheckedPressed}" />
    </Style>

    <!-- SplitButton Checked Pressed State -->
    <Style Selector="SplitButton:pressed:checked /template/ Button#PART_PrimaryButton /template/ ContentPresenter,
                     SplitButton:pressed:checked /template/ Button#PART_SecondaryButton /template/ ContentPresenter,
                     SplitButton:pressed:checked /template/ Border#SeparatorBorder">
        <Setter Property="Border.Background" Value="{DynamicResource SplitButtonBackgroundCheckedPressed}" />
        <Setter Property="Border.BorderBrush" Value="{DynamicResource SplitButtonBorderBrushCheckedPressed}" />
        <Setter Property="TextElement.Foreground" Value="{DynamicResource SplitButtonForegroundCheckedPressed}" />
    </Style>
    <Style Selector="SplitButton:pressed:checked /template/ Button#PART_SecondaryButton ui|SymbolIcon">
        <Setter Property="Foreground" Value="{DynamicResource SplitButtonForegroundCheckedPressed}" />
    </Style>

    <!-- Checked Flyout Open State -->
    <Style Selector="SplitButton:checked:flyout-open /template/ Button#PART_PrimaryButton /template/ ContentPresenter,
                     SplitButton:checked:flyout-open /template/ Button#PART_SecondaryButton /template/ ContentPresenter,
                     SplitButton:checked:flyout-open /template/ Border#SeparatorBorder">
        <Setter Property="Border.Background" Value="{DynamicResource SplitButtonBackgroundCheckedPressed}" />
        <Setter Property="Border.BorderBrush" Value="{DynamicResource SplitButtonBorderBrushCheckedPressed}" />
        <Setter Property="TextElement.Foreground" Value="{DynamicResource SplitButtonForegroundCheckedPressed}" />
    </Style>
    <Style Selector="SplitButton:checked:flyout-open /template/ Button#PART_SecondaryButton ui|SymbolIcon">
        <Setter Property="Foreground" Value="{DynamicResource SplitButtonForegroundCheckedPressed}" />
    </Style>

    <!-- Disabled Checked State -->
    <Style Selector="SplitButton:checked:disabled /template/ Button#PART_PrimaryButton /template/ ContentPresenter,
                     SplitButton:checked:disabled /template/ Button#PART_SecondaryButton /template/ ContentPresenter,
                     SplitButton:checked:disabled /template/ Border#SeparatorBorder">
        <Setter Property="Border.Background" Value="{DynamicResource SplitButtonBackgroundCheckedDisabled}" />
        <Setter Property="Border.BorderBrush" Value="{DynamicResource SplitButtonBorderBrushCheckedDisabled}" />
        <Setter Property="TextElement.Foreground" Value="{DynamicResource SplitButtonForegroundCheckedDisabled}" />
    </Style>
    <Style Selector="SplitButton:checked:disabled /template/ Button#PART_SecondaryButton ui|SymbolIcon">
        <Setter Property="Foreground" Value="{DynamicResource SplitButtonForegroundCheckedDisabled}" />
    </Style>
    
</Styles>
