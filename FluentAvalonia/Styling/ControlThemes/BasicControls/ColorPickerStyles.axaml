<ResourceDictionary xmlns="https://github.com/avaloniaui"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="using:Avalonia.Controls"
                    xmlns:converters="using:Avalonia.Controls.Converters"
                    xmlns:primitives="using:Avalonia.Controls.Primitives"
                    xmlns:pc="clr-namespace:Avalonia.Controls.Primitives.Converters;assembly=Avalonia.Controls.ColorPicker"
                    xmlns:globalization="clr-namespace:System.Globalization;assembly=mscorlib"
                    xmlns:ui="clr-namespace:FluentAvalonia.UI.Controls;assembly=FluentAvalonia"
                    x:CompileBindings="True">

<!--
Note the following changes from upstream Avalonia:
 1. All ControlTheme resource dictionary files were merged together here
 2. All resources are moved to the beginning of this file (shared first)
 3. ColorViewTabBackgroundCornerRadius was modified to match Fluent v2 ControlCornerRadius
 4. All PathIcon controls for tab headers were replaced by FontIcon using the symbol font
 5. The content-area background and border brushes were modified to match Fluent v2 content overlays
 6. The selector/thumb brushes used in upstream Avalonia Fluent v1 no longer exist
    - SystemControlBackgroundChromeWhiteBrush -> ColorControlLightSelectorBrush (new resource)
    - SystemControlBackgroundChromeBlackHighBrush -> ColorControlDarkSelectorBrush (new resource)
    - SystemControlForegroundBaseHighBrush -> ColorControlDefaultSelectorBrush (new resource)
 7. Separated out ColorViewColorModelRadioButtonTheme and converted to a ControlTheme
 8. Added new ColorViewPaletteListBoxTheme to customize ListBox for the ColorPicker itself
-->

  <!-- Shared Resources -->
  <VisualBrush x:Key="ColorControlCheckeredBackgroundBrush"
               TileMode="Tile"
               Stretch="Uniform"
               DestinationRect="0,0,8,8">
    <VisualBrush.Visual>
      <Image Width="8" Height="8">
        <Image.Source>
          <DrawingImage>
            <DrawingImage.Drawing>
              <DrawingGroup>
                <GeometryDrawing Geometry="M0,0 L2,0 2,2, 0,2Z"
                                 Brush="Transparent" />
                <GeometryDrawing Geometry="M0,1 L2,1 2,2, 1,2 1,0 0,0Z"
                                 Brush="#19808080" />
              </DrawingGroup>
            </DrawingImage.Drawing>
          </DrawingImage>
        </Image.Source>
      </Image>
    </VisualBrush.Visual>
  </VisualBrush>

  <SolidColorBrush x:Key="ColorControlLightSelectorBrush" Color="White" />
  <SolidColorBrush x:Key="ColorControlDarkSelectorBrush" Color="Black" />
  <StaticResource x:Key="ColorControlDefaultSelectorBrush" ResourceKey="TextFillColorPrimaryBrush" />

  <!-- Shared Converters -->
  <converters:EnumToBoolConverter x:Key="EnumToBoolConverter" />
  <converters:ToBrushConverter x:Key="ToBrushConverter" />
  <converters:CornerRadiusFilterConverter x:Key="LeftCornerRadiusFilterConverter" Filter="TopLeft, BottomLeft"/>
  <converters:CornerRadiusFilterConverter x:Key="RightCornerRadiusFilterConverter" Filter="TopRight, BottomRight"/>
  <converters:CornerRadiusFilterConverter x:Key="TopCornerRadiusFilterConverter" Filter="TopLeft, TopRight"/>
  <converters:CornerRadiusFilterConverter x:Key="BottomCornerRadiusFilterConverter" Filter="BottomLeft, BottomRight"/>
  <converters:CornerRadiusToDoubleConverter x:Key="TopLeftCornerRadiusConverter" Corner="TopLeft" />
  <converters:CornerRadiusToDoubleConverter x:Key="BottomRightCornerRadiusConverter" Corner="BottomRight" />

  <!-- ColorView -->
  <pc:ContrastBrushConverter x:Key="ContrastBrushConverter" />
  <pc:ThirdComponentConverter x:Key="ThirdComponentConverter" />
  <converters:ColorToDisplayNameConverter x:Key="ColorToDisplayNameConverter" />
  <converters:ColorToHexConverter x:Key="ColorToHexConverter" />
  <globalization:NumberFormatInfo x:Key="ColorViewComponentNumberFormat" NumberDecimalDigits="0" />
  <x:Double x:Key="ColorViewTabStripHeight">48</x:Double>
  <x:Double x:Key="ColorViewComponentLabelWidth">30</x:Double>
  <x:Double x:Key="ColorViewComponentTextInputWidth">80</x:Double>
  <!-- This radius should follow ControlCornerRadius -->
  <CornerRadius x:Key="ColorViewTabBackgroundCornerRadius">4</CornerRadius>

  <!-- ColorPreviewer -->
  <pc:AccentColorConverter x:Key="AccentColorConverter" />
  <x:Double x:Key="ColorPreviewerAccentSectionWidth">80</x:Double>
  <x:Double x:Key="ColorPreviewerAccentSectionHeight">40</x:Double>

  <ControlTheme x:Key="{x:Type ColorSpectrum}"
                TargetType="ColorSpectrum">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ColorSpectrum}">
          <Panel x:Name="PART_LayoutRoot"
                 HorizontalAlignment="Stretch"
                 VerticalAlignment="Stretch">
            <Panel x:Name="PART_SizingPanel"
                   HorizontalAlignment="Center"
                   VerticalAlignment="Center"
                   ClipToBounds="True">
              <Rectangle x:Name="PART_SpectrumRectangle"
                         IsHitTestVisible="False"
                         HorizontalAlignment="Stretch"
                         VerticalAlignment="Stretch"
                         IsVisible="{TemplateBinding Shape, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static controls:ColorSpectrumShape.Box}}"
                         RadiusX="{TemplateBinding CornerRadius, Converter={StaticResource TopLeftCornerRadiusConverter}}"
                         RadiusY="{TemplateBinding CornerRadius, Converter={StaticResource BottomRightCornerRadiusConverter}}" />
              <Rectangle x:Name="PART_SpectrumOverlayRectangle"
                         IsHitTestVisible="False"
                         HorizontalAlignment="Stretch"
                         VerticalAlignment="Stretch"
                         IsVisible="{TemplateBinding Shape, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static controls:ColorSpectrumShape.Box}}"
                         RadiusX="{TemplateBinding CornerRadius, Converter={StaticResource TopLeftCornerRadiusConverter}}"
                         RadiusY="{TemplateBinding CornerRadius, Converter={StaticResource BottomRightCornerRadiusConverter}}" />
              <Ellipse x:Name="PART_SpectrumEllipse"
                       IsHitTestVisible="False"
                       HorizontalAlignment="Stretch"
                       VerticalAlignment="Stretch"
                       IsVisible="{TemplateBinding Shape, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static controls:ColorSpectrumShape.Ring}}" />
              <Ellipse x:Name="PART_SpectrumOverlayEllipse"
                       IsHitTestVisible="False"
                       HorizontalAlignment="Stretch"
                       VerticalAlignment="Stretch"
                       IsVisible="{TemplateBinding Shape, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static controls:ColorSpectrumShape.Ring}}" />
              <Canvas x:Name="PART_InputTarget"
                      Background="Transparent"
                      HorizontalAlignment="Stretch"
                      VerticalAlignment="Stretch">
                <!-- Note: ToolTip.VerticalOffset is for touch devices to keep the tip above fingers -->
                <Panel x:Name="PART_SelectionEllipsePanel"
                       ToolTip.VerticalOffset="-10"
                       ToolTip.Placement="Top">
                  <Ellipse x:Name="FocusEllipse"
                           Margin="-2"
                           StrokeThickness="2"
                           IsHitTestVisible="False"
                           HorizontalAlignment="Stretch"
                           VerticalAlignment="Stretch" />
                  <Ellipse x:Name="SelectionEllipse"
                           StrokeThickness="2"
                           IsHitTestVisible="False"
                           HorizontalAlignment="Stretch"
                           VerticalAlignment="Stretch" />
                  <ToolTip.Tip>
                    <!-- Set in code-behind -->
                  </ToolTip.Tip>
                </Panel>
              </Canvas>
              <Rectangle x:Name="BorderRectangle"
                         IsHitTestVisible="False"
                         HorizontalAlignment="Stretch"
                         VerticalAlignment="Stretch"
                         IsVisible="{TemplateBinding Shape, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static controls:ColorSpectrumShape.Box}}"
                         RadiusX="{TemplateBinding CornerRadius, Converter={StaticResource TopLeftCornerRadiusConverter}}"
                         RadiusY="{TemplateBinding CornerRadius, Converter={StaticResource BottomRightCornerRadiusConverter}}" />
              <Ellipse x:Name="BorderEllipse"
                       IsHitTestVisible="False"
                       HorizontalAlignment="Stretch"
                       VerticalAlignment="Stretch"
                       IsVisible="{TemplateBinding Shape, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static controls:ColorSpectrumShape.Ring}}" />
            </Panel>
          </Panel>
        </ControlTemplate>
      </Setter.Value>
    </Setter>

    <!-- Normal -->
    <!-- Separating this allows easier customization in applications -->
    <Style Selector="^ /template/ Ellipse#BorderEllipse,
                     ^ /template/ Rectangle#BorderRectangle">
      <Setter Property="Stroke" Value="{DynamicResource SystemControlForegroundListLowBrush}" />
      <Setter Property="StrokeThickness" Value="1" />
    </Style>

    <!-- Focus -->
    <Style Selector="^ /template/ Ellipse#FocusEllipse">
      <Setter Property="IsVisible" Value="False" />
    </Style>
    <Style Selector="^:focus-visible /template/ Ellipse#FocusEllipse">
      <Setter Property="IsVisible" Value="True" />
    </Style>

    <!-- Selector Color -->
    <Style Selector="^ /template/ Ellipse#FocusEllipse">
      <Setter Property="Stroke" Value="{DynamicResource ColorControlLightSelectorBrush}" />
    </Style>
    <Style Selector="^ /template/ Ellipse#SelectionEllipse">
      <Setter Property="Stroke" Value="{DynamicResource ColorControlDarkSelectorBrush}" />
    </Style>
    <Style Selector="^:light-selector /template/ Ellipse#FocusEllipse">
      <Setter Property="Stroke" Value="{DynamicResource ColorControlDarkSelectorBrush}" />
    </Style>
    <Style Selector="^:light-selector /template/ Ellipse#SelectionEllipse">
      <Setter Property="Stroke" Value="{DynamicResource ColorControlLightSelectorBrush}" />
    </Style>

    <Style Selector="^:pointerover /template/ Ellipse#SelectionEllipse">
      <Setter Property="Opacity" Value="0.7" />
    </Style>
    <Style Selector="^:pointerover:light-selector /template/ Ellipse#SelectionEllipse">
      <Setter Property="Opacity" Value="0.8" />
    </Style>

    <!-- Selector Size -->
    <Style Selector="^ /template/ Panel#PART_SelectionEllipsePanel">
      <Setter Property="Width" Value="16" />
      <Setter Property="Height" Value="16" />
    </Style>
    <Style Selector="^:large-selector /template/ Panel#PART_SelectionEllipsePanel">
      <Setter Property="Width" Value="48" />
      <Setter Property="Height" Value="48" />
    </Style>

  </ControlTheme>

  <ControlTheme x:Key="ColorSliderThumbTheme"
                TargetType="Thumb">
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="BorderBrush" Value="{DynamicResource ColorControlDefaultSelectorBrush}" />
    <Setter Property="BorderThickness" Value="3" />
    <Setter Property="CornerRadius" Value="10" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate>
          <Border Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}"
                  CornerRadius="{TemplateBinding CornerRadius}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </ControlTheme>

  <ControlTheme x:Key="{x:Type ColorSlider}"
                TargetType="ColorSlider">

    <Style Selector="^:horizontal">
      <Setter Property="BorderThickness" Value="0" />
      <Setter Property="CornerRadius" Value="10" />
      <Setter Property="Height" Value="20" />
      <Setter Property="Template">
        <ControlTemplate TargetType="{x:Type ColorSlider}">
          <Border BorderThickness="{TemplateBinding BorderThickness}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  CornerRadius="{TemplateBinding CornerRadius}">
            <Grid Margin="{TemplateBinding Padding}">
              <Rectangle HorizontalAlignment="Stretch"
                         VerticalAlignment="Stretch"
                         Fill="{StaticResource ColorControlCheckeredBackgroundBrush}"
                         RadiusX="{TemplateBinding CornerRadius, Converter={StaticResource TopLeftCornerRadiusConverter}}"
                         RadiusY="{TemplateBinding CornerRadius, Converter={StaticResource BottomRightCornerRadiusConverter}}" />
              <Rectangle HorizontalAlignment="Stretch"
                         VerticalAlignment="Stretch"
                         Fill="{TemplateBinding Background}"
                         RadiusX="{TemplateBinding CornerRadius, Converter={StaticResource TopLeftCornerRadiusConverter}}"
                         RadiusY="{TemplateBinding CornerRadius, Converter={StaticResource BottomRightCornerRadiusConverter}}" />
              <Track Name="PART_Track"
                     HorizontalAlignment="Stretch"
                     VerticalAlignment="Stretch"
                     Minimum="{TemplateBinding Minimum}"
                     Maximum="{TemplateBinding Maximum}"
                     Value="{TemplateBinding Value, Mode=TwoWay}"
                     IsDirectionReversed="{TemplateBinding IsDirectionReversed}"
                     Orientation="Horizontal">
                <Track.DecreaseButton>
                  <RepeatButton Name="PART_DecreaseButton"
                                Background="Transparent"
                                Focusable="False"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch">
                    <RepeatButton.Template>
                      <ControlTemplate>
                        <Border Name="FocusTarget"
                                Background="Transparent"
                                Margin="0,-10" />
                      </ControlTemplate>
                    </RepeatButton.Template>
                  </RepeatButton>
                </Track.DecreaseButton>
                <Track.IncreaseButton>
                  <RepeatButton Name="PART_IncreaseButton"
                                Background="Transparent"
                                Focusable="False"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch">
                    <RepeatButton.Template>
                      <ControlTemplate>
                        <Border Name="FocusTarget"
                                Background="Transparent"
                                Margin="0,-10" />
                      </ControlTemplate>
                    </RepeatButton.Template>
                  </RepeatButton>
                </Track.IncreaseButton>
                <Thumb Name="ColorSliderThumb"
                       Theme="{StaticResource ColorSliderThumbTheme}"
                       Margin="0"
                       Padding="0"
                       DataContext="{TemplateBinding Value}"
                       Height="{TemplateBinding Height}"
                       Width="{TemplateBinding Height}" />
              </Track>
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter>
    </Style>

    <Style Selector="^:vertical">
      <Setter Property="BorderThickness" Value="0" />
      <Setter Property="CornerRadius" Value="10" />
      <Setter Property="Width" Value="20" />
      <Setter Property="Template">
        <ControlTemplate TargetType="{x:Type ColorSlider}">
          <Border BorderThickness="{TemplateBinding BorderThickness}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  CornerRadius="{TemplateBinding CornerRadius}">
            <Grid Margin="{TemplateBinding Padding}">
              <Rectangle HorizontalAlignment="Stretch"
                         VerticalAlignment="Stretch"
                         Fill="{StaticResource ColorControlCheckeredBackgroundBrush}"
                         RadiusX="{TemplateBinding CornerRadius, Converter={StaticResource TopLeftCornerRadiusConverter}}"
                         RadiusY="{TemplateBinding CornerRadius, Converter={StaticResource BottomRightCornerRadiusConverter}}" />
              <Rectangle HorizontalAlignment="Stretch"
                         VerticalAlignment="Stretch"
                         Fill="{TemplateBinding Background}"
                         RadiusX="{TemplateBinding CornerRadius, Converter={StaticResource TopLeftCornerRadiusConverter}}"
                         RadiusY="{TemplateBinding CornerRadius, Converter={StaticResource BottomRightCornerRadiusConverter}}" />
              <Track Name="PART_Track"
                     HorizontalAlignment="Stretch"
                     VerticalAlignment="Stretch"
                     Minimum="{TemplateBinding Minimum}"
                     Maximum="{TemplateBinding Maximum}"
                     Value="{TemplateBinding Value, Mode=TwoWay}"
                     IsDirectionReversed="{TemplateBinding IsDirectionReversed}"
                     Orientation="Vertical">
                <Track.DecreaseButton>
                  <RepeatButton Name="PART_DecreaseButton"
                                Background="Transparent"
                                Focusable="False"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch">
                    <RepeatButton.Template>
                      <ControlTemplate>
                        <Border Name="FocusTarget"
                                Background="Transparent"
                                Margin="0,-10" />
                      </ControlTemplate>
                    </RepeatButton.Template>
                  </RepeatButton>
                </Track.DecreaseButton>
                <Track.IncreaseButton>
                  <RepeatButton Name="PART_IncreaseButton"
                                Background="Transparent"
                                Focusable="False"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch">
                    <RepeatButton.Template>
                      <ControlTemplate>
                        <Border Name="FocusTarget"
                                Background="Transparent"
                                Margin="0,-10" />
                      </ControlTemplate>
                    </RepeatButton.Template>
                  </RepeatButton>
                </Track.IncreaseButton>
                <Thumb Name="ColorSliderThumb"
                       Theme="{StaticResource ColorSliderThumbTheme}"
                       Margin="0"
                       Padding="0"
                       DataContext="{TemplateBinding Value}"
                       Height="{TemplateBinding Width}"
                       Width="{TemplateBinding Width}" />
              </Track>
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter>
    </Style>

    <!-- Selector/Thumb Color -->
    <Style Selector="^:pointerover /template/ Thumb#ColorSliderThumb">
      <Setter Property="Opacity" Value="0.75" />
    </Style>
    <Style Selector="^:pointerover:dark-selector /template/ Thumb#ColorSliderThumb">
      <Setter Property="Opacity" Value="0.7" />
    </Style>
    <Style Selector="^:pointerover:light-selector /template/ Thumb#ColorSliderThumb">
      <Setter Property="Opacity" Value="0.8" />
    </Style>

    <Style Selector="^:dark-selector /template/ Thumb#ColorSliderThumb">
      <Setter Property="BorderBrush" Value="{DynamicResource ColorControlDarkSelectorBrush}" />
    </Style>
    <Style Selector="^:light-selector /template/ Thumb#ColorSliderThumb">
      <Setter Property="BorderBrush" Value="{DynamicResource ColorControlLightSelectorBrush}" />
    </Style>

  </ControlTheme>

  <ControlTheme x:Key="{x:Type ColorPreviewer}"
                TargetType="ColorPreviewer">
    <Setter Property="Height" Value="70" />
    <Setter Property="CornerRadius" Value="{DynamicResource ControlCornerRadius}" />
    <Setter Property="Template">
      <ControlTemplate TargetType="{x:Type ColorPreviewer}">
        <Panel>
          <!-- Preview color with accents to the left and right -->
          <Grid ColumnDefinitions="Auto,*,Auto"
                IsVisible="{TemplateBinding IsAccentColorsVisible}">
            <!-- Left accent colors -->
            <Grid Grid.Column="0"
                  Height="{StaticResource ColorPreviewerAccentSectionHeight}"
                  Width="{StaticResource ColorPreviewerAccentSectionWidth}"
                  ColumnDefinitions="*,*"
                  Margin="0,0,-10,0"
                  VerticalAlignment="Center">
              <Border Grid.Column="0"
                      Grid.ColumnSpan="2"
                      HorizontalAlignment="Stretch"
                      VerticalAlignment="Stretch"
                      Background="{StaticResource ColorControlCheckeredBackgroundBrush}" />
              <Border x:Name="PART_AccentDecrement2Border"
                      Grid.Column="0"
                      CornerRadius="{TemplateBinding CornerRadius, Converter={StaticResource LeftCornerRadiusFilterConverter}}"
                      Tag="-2"
                      Background="{TemplateBinding HsvColor, Converter={StaticResource AccentColorConverter}, ConverterParameter='-2'}" />
              <Border x:Name="PART_AccentDecrement1Border"
                      Grid.Column="1"
                      Tag="-1"
                      Background="{TemplateBinding HsvColor, Converter={StaticResource AccentColorConverter}, ConverterParameter='-1'}" />
            </Grid>
            <!-- Right accent colors -->
            <Grid Grid.Column="2"
                  Height="{StaticResource ColorPreviewerAccentSectionHeight}"
                  Width="{StaticResource ColorPreviewerAccentSectionWidth}"
                  ColumnDefinitions="*,*"
                  Margin="-10,0,0,0"
                  VerticalAlignment="Center">
              <Border Grid.Column="0"
                      Grid.ColumnSpan="2"
                      HorizontalAlignment="Stretch"
                      VerticalAlignment="Stretch"
                      Background="{StaticResource ColorControlCheckeredBackgroundBrush}" />
              <Border x:Name="PART_AccentIncrement1Border"
                      Grid.Column="0"
                      Tag="1"
                      Background="{TemplateBinding HsvColor, Converter={StaticResource AccentColorConverter}, ConverterParameter='1'}" />
              <Border x:Name="PART_AccentIncrement2Border"
                      Grid.Column="1"
                      CornerRadius="{TemplateBinding CornerRadius, Converter={StaticResource RightCornerRadiusFilterConverter}}"
                      Tag="2"
                      Background="{TemplateBinding HsvColor, Converter={StaticResource AccentColorConverter}, ConverterParameter='2'}" />
            </Grid>
            <!-- Preview color: Must be last for drop shadow Z-index -->
            <Border Grid.Column="1"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    BoxShadow="0 0 10 2 #BF000000"
                    CornerRadius="{TemplateBinding CornerRadius}"
                    Margin="10">
              <Panel>
                <Border Background="{StaticResource ColorControlCheckeredBackgroundBrush}"
                        CornerRadius="{TemplateBinding CornerRadius}" />
                <Border CornerRadius="{TemplateBinding CornerRadius}"
                        Background="{TemplateBinding HsvColor, Converter={StaticResource ToBrushConverter}}"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch" />
              </Panel>
            </Border>
          </Grid>
          <!-- Only preview color -->
          <Border CornerRadius="{TemplateBinding CornerRadius}"
                  IsVisible="{TemplateBinding IsAccentColorsVisible, Converter={x:Static BoolConverters.Not}}"
                  HorizontalAlignment="Stretch"
                  VerticalAlignment="Stretch"
                  Margin="0,10,0,10">
            <Panel>
              <Border Background="{StaticResource ColorControlCheckeredBackgroundBrush}"
                      CornerRadius="{TemplateBinding CornerRadius}" />
              <Border CornerRadius="{TemplateBinding CornerRadius}"
                      Background="{TemplateBinding HsvColor, Converter={StaticResource ToBrushConverter}}"
                      HorizontalAlignment="Stretch"
                      VerticalAlignment="Stretch" />
            </Panel>
          </Border>
        </Panel>
      </ControlTemplate>
    </Setter>
  </ControlTheme>

  <ControlTheme x:Key="ColorViewPaletteListBoxTheme"
                TargetType="ListBox">
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
    <Setter Property="ScrollViewer.IsScrollChainingEnabled" Value="True" />
    <Setter Property="Template">
      <ControlTemplate>
        <Border Name="border"
                ClipToBounds="{TemplateBinding ClipToBounds}"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                CornerRadius="{TemplateBinding CornerRadius}">
          <ScrollViewer Name="PART_ScrollViewer"
                        HorizontalScrollBarVisibility="{TemplateBinding (ScrollViewer.HorizontalScrollBarVisibility)}"
                        VerticalScrollBarVisibility="{TemplateBinding (ScrollViewer.VerticalScrollBarVisibility)}"
                        IsScrollChainingEnabled="{TemplateBinding (ScrollViewer.IsScrollChainingEnabled)}"
                        AllowAutoHide="{TemplateBinding (ScrollViewer.AllowAutoHide)}">
            <ItemsPresenter Name="PART_ItemsPresenter"
                            Items="{TemplateBinding Items}"
                            ItemsPanel="{TemplateBinding ItemsPanel}"
                            ItemTemplate="{TemplateBinding ItemTemplate}"
                            Margin="{TemplateBinding Padding}"
                            VirtualizationMode="{TemplateBinding VirtualizationMode}" />
          </ScrollViewer>
        </Border>
      </ControlTemplate>
    </Setter>
  </ControlTheme>

  <ControlTheme x:Key="ColorViewColorModelRadioButtonTheme"
                TargetType="RadioButton">
    <Setter Property="Background" Value="{DynamicResource ToggleButtonBackground}" />
    <Setter Property="Foreground" Value="{DynamicResource ToggleButtonForeground}" />
    <Setter Property="BorderBrush" Value="{DynamicResource SystemControlHighlightAccentBrush}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="CornerRadius" Value="{DynamicResource ControlCornerRadius}" />
    <Setter Property="Padding" Value="{DynamicResource ButtonPadding}" />
    <Setter Property="HorizontalAlignment" Value="Stretch" />
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="FontWeight" Value="Normal" />
    <Setter Property="FontSize" Value="{DynamicResource ControlContentThemeFontSize}" />
    <Setter Property="Template">
      <ControlTemplate TargetType="{x:Type RadioButton}">
        <ContentPresenter x:Name="PART_ContentPresenter"
                          Background="{TemplateBinding Background}"
                          BorderBrush="{TemplateBinding BorderBrush}"
                          BorderThickness="{TemplateBinding BorderThickness}"
                          CornerRadius="{TemplateBinding CornerRadius}"
                          Content="{TemplateBinding Content}"
                          ContentTemplate="{TemplateBinding ContentTemplate}"
                          Padding="{TemplateBinding Padding}"
                          RecognizesAccessKey="True"
                          HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                          VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
      </ControlTemplate>
    </Setter>

    <Style Selector="^ /template/ ContentPresenter#PART_ContentPresenter">
      <Setter Property="CornerRadius" Value="{DynamicResource ControlCornerRadius}" />
    </Style>

    <Style Selector="^:pointerover /template/ ContentPresenter#PART_ContentPresenter">
      <Setter Property="Background" Value="{DynamicResource ToggleButtonBackgroundPointerOver}" />
      <Setter Property="BorderBrush" Value="{DynamicResource SystemControlHighlightAccentBrush}" />
      <Setter Property="Foreground" Value="{DynamicResource ToggleButtonForegroundPointerOver}" />
    </Style>

    <Style Selector="^:pressed  /template/ ContentPresenter#PART_ContentPresenter">
      <Setter Property="Background" Value="{DynamicResource ToggleButtonBackgroundPressed}" />
      <Setter Property="BorderBrush" Value="{DynamicResource SystemControlHighlightAccentBrush}" />
      <Setter Property="Foreground" Value="{DynamicResource ToggleButtonForegroundPressed}" />
    </Style>

    <Style Selector="^:checked /template/ ContentPresenter#PART_ContentPresenter">
      <Setter Property="Background" Value="{DynamicResource ToggleButtonBackgroundChecked}" />
      <Setter Property="BorderBrush" Value="{DynamicResource SystemControlHighlightAccentBrush}" />
      <Setter Property="Foreground" Value="{DynamicResource ToggleButtonForegroundChecked}" />
    </Style>

    <Style Selector="^:checked:pointerover /template/ ContentPresenter#PART_ContentPresenter">
      <Setter Property="Background" Value="{DynamicResource ToggleButtonBackgroundCheckedPointerOver}" />
      <Setter Property="BorderBrush" Value="{DynamicResource SystemControlHighlightAccentBrush}" />
      <Setter Property="Foreground" Value="{DynamicResource ToggleButtonForegroundCheckedPointerOver}" />
    </Style>

    <Style Selector="^:checked:pressed /template/ ContentPresenter#PART_ContentPresenter">
      <Setter Property="Background" Value="{DynamicResource ToggleButtonBackgroundCheckedPressed}" />
      <Setter Property="BorderBrush" Value="{DynamicResource SystemControlHighlightAccentBrush}" />
      <Setter Property="Foreground" Value="{DynamicResource ToggleButtonForegroundCheckedPressed}" />
    </Style>
  </ControlTheme>

  <ControlTheme x:Key="{x:Type ColorView}"
                TargetType="ColorView">
    <Setter Property="CornerRadius" Value="{DynamicResource ControlCornerRadius}" />
    <Setter Property="Palette">
      <controls:FluentColorPalette />
    </Setter>
    <Setter Property="Template">
      <ControlTemplate TargetType="{x:Type ColorView}">
        <Grid RowDefinitions="Auto,Auto">

          <!-- Backgrounds -->
          <!-- These are separated for Fluent v2 re-styling without having to re-template. -->
          <Border x:Name="TabBackgroundBorder"
                  Grid.Row="0"
                  Grid.RowSpan="2"
                  Height="48"
                  HorizontalAlignment="Stretch"
                  VerticalAlignment="Top"
                  Background="Transparent"
                  CornerRadius="{DynamicResource ColorViewTabBackgroundCornerRadius}" />
          <Border x:Name="ContentBackgroundBorder"
                  Grid.Row="0"
                  Grid.RowSpan="2"
                  Margin="0,48,0,0"
                  HorizontalAlignment="Stretch"
                  VerticalAlignment="Stretch"
                  CornerRadius="{TemplateBinding CornerRadius, Converter={StaticResource BottomCornerRadiusFilterConverter}}"
                  Background="{DynamicResource LayerFillColorAltBrush}"
                  BorderBrush="{DynamicResource DividerStrokeColorDefaultBrush}"
                  BorderThickness="0,1,0,0" />

          <TabControl x:Name="PART_TabControl"
                      Grid.Row="0"
                      Height="338"
                      Width="350"
                      SelectedIndex="{Binding SelectedIndex, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}">
            <TabControl.Resources>
              <Thickness x:Key="TabItemMargin">0,0,0,0</Thickness>
            </TabControl.Resources>
            <TabControl.Styles>
              <Style Selector="TabControl">
                <Setter Property="ItemsPanel">
                  <Setter.Value>
                    <ItemsPanelTemplate>
                      <UniformGrid Columns="0"
                                   Rows="1" />
                    </ItemsPanelTemplate>
                  </Setter.Value>
                </Setter>
              </Style>
            </TabControl.Styles>
            <!-- Spectrum Tab -->
            <TabItem IsVisible="{TemplateBinding IsColorSpectrumVisible}">
              <TabItem.Header>
                <Border Height="{DynamicResource ColorViewTabStripHeight}">
                  <ui:FontIcon UseLayoutRounding="False"
                               IsHitTestVisible="False"
                               FontFamily="{DynamicResource SymbolThemeFontFamily}"
                               Glyph="&#xE76D;" />
                </Border>
              </TabItem.Header>
              <Grid RowDefinitions="*"
                    Margin="12">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto"
                                    MinWidth="32" />
                  <ColumnDefinition Width="*" />
                  <ColumnDefinition Width="Auto"
                                    MinWidth="32" />
                </Grid.ColumnDefinitions>
                <primitives:ColorSlider x:Name="ColorSpectrumThirdComponentSlider"
                                        AutomationProperties.Name="Third Component"
                                        Grid.Column="0"
                                        IsAlphaMaxForced="True"
                                        IsSaturationValueMaxForced="False"
                                        Orientation="Vertical"
                                        ColorModel="Hsva"
                                        ColorComponent="{Binding Components, ElementName=ColorSpectrum, Converter={StaticResource ThirdComponentConverter}}"
                                        HsvColor="{Binding HsvColor, ElementName=ColorSpectrum}"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Stretch"
                                        Margin="0,0,12,0"
                                        IsVisible="{TemplateBinding IsColorSpectrumSliderVisible}"/>
                <primitives:ColorSpectrum x:Name="ColorSpectrum"
                                          Grid.Column="1"
                                          Components="{TemplateBinding ColorSpectrumComponents}"
                                          HsvColor="{Binding HsvColor, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                          MinHue="{TemplateBinding MinHue}"
                                          MaxHue="{TemplateBinding MaxHue}"
                                          MinSaturation="{TemplateBinding MinSaturation}"
                                          MaxSaturation="{TemplateBinding MaxSaturation}"
                                          MinValue="{TemplateBinding MinValue}"
                                          MaxValue="{TemplateBinding MaxValue}"
                                          Shape="{TemplateBinding ColorSpectrumShape}"
                                          HorizontalAlignment="Stretch"
                                          VerticalAlignment="Stretch" />
                <primitives:ColorSlider x:Name="ColorSpectrumAlphaSlider"
                                        AutomationProperties.Name="Alpha Component"
                                        Grid.Column="2"
                                        Orientation="Vertical"
                                        ColorModel="Hsva"
                                        ColorComponent="Alpha"
                                        HsvColor="{Binding HsvColor, ElementName=ColorSpectrum}"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Stretch"
                                        Margin="12,0,0,0"
                                        IsEnabled="{TemplateBinding IsAlphaEnabled}">
                  <primitives:ColorSlider.IsVisible>
                    <MultiBinding Converter="{x:Static BoolConverters.And}">
                      <Binding RelativeSource="{RelativeSource TemplatedParent}"
                               Path="IsAlphaVisible" />
                    </MultiBinding>
                  </primitives:ColorSlider.IsVisible>
                </primitives:ColorSlider>
              </Grid>
            </TabItem>
            <!-- Palette Tab -->
            <TabItem IsVisible="{TemplateBinding IsColorPaletteVisible}">
              <TabItem.Header>
                <Border Height="{DynamicResource ColorViewTabStripHeight}">
                  <ui:FontIcon UseLayoutRounding="False"
                               IsHitTestVisible="False"
                               FontFamily="{DynamicResource SymbolThemeFontFamily}"
                               Glyph="&#xE790;" />
                </Border>
              </TabItem.Header>
              <ListBox Theme="{StaticResource ColorViewPaletteListBoxTheme}"
                       Items="{TemplateBinding PaletteColors}"
                       SelectedItem="{Binding Color, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                       UseLayoutRounding="False"
                       Margin="12">
                <ListBox.Styles>

                  <Style Selector="ListBoxItem">
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="Padding" Value="0" />
                    <Setter Property="Template">
                      <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Grid UseLayoutRounding="False">
                          <ContentPresenter Name="PART_ContentPresenter"
                                            Background="{TemplateBinding Background}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            CornerRadius="{TemplateBinding CornerRadius}"
                                            ContentTemplate="{TemplateBinding ContentTemplate}"
                                            Content="{TemplateBinding Content}"
                                            Padding="{TemplateBinding Padding}"
                                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" />
                          <Rectangle x:Name="BorderRectangle"
                                     IsHitTestVisible="False"
                                     StrokeThickness="3"
                                     HorizontalAlignment="Stretch"
                                     VerticalAlignment="Stretch" />
                        </Grid>
                      </ControlTemplate>
                    </Setter>

                    <Style Selector="^ /template/ Rectangle#BorderRectangle">
                      <Setter Property="Stroke" Value="{DynamicResource SystemControlHighlightListAccentLowBrush}" />
                      <Setter Property="Opacity" Value="0" />
                    </Style>

                    <Style Selector="^:pointerover /template/ Rectangle#BorderRectangle">
                      <Setter Property="Stroke" Value="{DynamicResource SystemControlHighlightListAccentLowBrush}" />
                      <Setter Property="Opacity" Value="1" />
                    </Style>

                    <Style Selector="^:selected /template/ Rectangle#BorderRectangle"
                           x:DataType="Color">
                      <!-- The below line really should be:
                             'Value="{Binding Converter={StaticResource ContrastBrushConverter}, ConverterParameter={DynamicResource TextControlForeground}}"'
                           However, DynamicResource and Binding is not currently supported in Avalonia for converter parameters.
                           This means certain colors with transparency less than 50% may have a selection border that is difficult
                           to see over top of the default control/window background. Since palettes do not usually have transparency
                           it is considered better to disable this functionality rather than work around it with a multi-value
                           converter. This should be revisited if Avalonia supports the above code in the future. -->
                      <Setter Property="Stroke" Value="{Binding Converter={StaticResource ContrastBrushConverter}}" />
                      <Setter Property="Opacity" Value="1" />
                    </Style>
                  </Style>

                </ListBox.Styles>
                <ListBox.ItemTemplate>
                  <DataTemplate DataType="{x:Type Color}">
                    <Border AutomationProperties.Name="{Binding Converter={StaticResource ColorToDisplayNameConverter}}"
                            ToolTip.Tip="{Binding Converter={StaticResource ColorToDisplayNameConverter}}"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch">
                      <Border.Background>
                        <SolidColorBrush Color="{Binding}" />
                      </Border.Background>
                    </Border>
                  </DataTemplate>
                </ListBox.ItemTemplate>
                <ListBox.ItemsPanel>
                  <ItemsPanelTemplate>
                    <UniformGrid Columns="{Binding $parent[ColorView].PaletteColumnCount}" />
                  </ItemsPanelTemplate>
                </ListBox.ItemsPanel>
              </ListBox>
            </TabItem>
            <!-- Components Tab -->
            <TabItem IsVisible="{TemplateBinding IsColorComponentsVisible}">
              <TabItem.Header>
                <Border Height="{DynamicResource ColorViewTabStripHeight}">
                  <ui:FontIcon UseLayoutRounding="False"
                               IsHitTestVisible="False"
                               FontFamily="{DynamicResource SymbolThemeFontFamily}"
                               Glyph="&#xE9E9;" />
                </Border>
              </TabItem.Header>
              <Grid ColumnDefinitions="Auto,Auto,*"
                    RowDefinitions="Auto,24,1*,1*,1*,1*,12"
                    Margin="12">
                <!-- Top color model & Hex input -->
                <Grid Grid.Column="0"
                      Grid.ColumnSpan="3"
                      Grid.Row="0"
                      ColumnDefinitions="1*,12,1*">
                  <!-- Content RGB/HSV names are hard-coded and considered universal -->
                  <!-- RadioButtons are styled to look like a 'SegmentedControl' or 'ButtonGroup' -->
                  <Grid ColumnDefinitions="1*,1*"
                        IsVisible="{TemplateBinding IsColorModelVisible}">
                    <RadioButton x:Name="RgbRadioButton"
                                 Theme="{StaticResource ColorViewColorModelRadioButtonTheme}"
                                 Grid.Column="0"
                                 Content="RGB"
                                 CornerRadius="4,0,0,4"
                                 IsChecked="{TemplateBinding ColorModel, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static controls:ColorModel.Rgba}, Mode=TwoWay}" />
                    <RadioButton x:Name="HsvRadioButton"
                                 Theme="{StaticResource ColorViewColorModelRadioButtonTheme}"
                                 Grid.Column="1"
                                 Content="HSV"
                                 CornerRadius="0,4,4,0"
                                 IsChecked="{TemplateBinding ColorModel, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static controls:ColorModel.Hsva}, Mode=TwoWay}" />
                  </Grid>
                  <Grid x:Name="HexInputGrid"
                        Grid.Column="2"
                        IsVisible="{TemplateBinding IsHexInputVisible}">
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="30" />
                      <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Border Grid.Column="0"
                            Height="32"
                            Background="{DynamicResource TextControlBackgroundDisabled}"
                            BorderBrush="{DynamicResource TextControlBorderBrush}"
                            BorderThickness="1,1,0,1"
                            CornerRadius="4,0,0,4">
                      <TextBlock Foreground="{DynamicResource TextControlForegroundDisabled}"
                                 FontWeight="SemiBold"
                                 Text="#"
                                 HorizontalAlignment="Center"
                                 VerticalAlignment="Center" />
                    </Border>
                    <!-- Color updated in code-behind -->
                    <TextBox x:Name="PART_HexTextBox"
                             Grid.Column="1"
                             AutomationProperties.Name="Hexadecimal Color"
                             Height="32"
                             MaxLength="8"
                             HorizontalAlignment="Stretch"
                             CornerRadius="0,4,4,0" />
                  </Grid>
                </Grid>
                <!-- Color component editing controls -->
                <!-- Component 1 RGB:Red HSV:Hue -->
                <Border Grid.Column="0"
                        Grid.Row="2"
                        Height="{Binding ElementName=Component1NumericUpDown, Path=Bounds.Height}"
                        Width="{DynamicResource ColorViewComponentLabelWidth}"
                        Background="{DynamicResource TextControlBackgroundDisabled}"
                        BorderBrush="{DynamicResource TextControlBorderBrush}"
                        BorderThickness="1,1,0,1"
                        CornerRadius="4,0,0,4"
                        VerticalAlignment="Center"
                        IsVisible="{TemplateBinding IsComponentTextInputVisible}">
                  <Panel HorizontalAlignment="Center"
                         VerticalAlignment="Center">
                    <TextBlock Foreground="{DynamicResource TextControlForegroundDisabled}"
                               FontWeight="SemiBold"
                               Text="R"
                               IsVisible="{TemplateBinding ColorModel, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static controls:ColorModel.Rgba}, Mode=OneWay}"/>
                    <TextBlock Foreground="{DynamicResource TextControlForegroundDisabled}"
                               FontWeight="SemiBold"
                               Text="H"
                               IsVisible="{TemplateBinding ColorModel, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static controls:ColorModel.Hsva}, Mode=OneWay}" />
                  </Panel>
                </Border>
                <NumericUpDown x:Name="Component1NumericUpDown"
                               Grid.Column="1"
                               Grid.Row="2"
                               AllowSpin="True"
                               ShowButtonSpinner="False"
                               Height="32"
                               Width="{DynamicResource ColorViewComponentTextInputWidth}"
                               CornerRadius="0,4,4,0"
                               Margin="0,0,12,0"
                               VerticalAlignment="Center"
                               NumberFormat="{StaticResource ColorViewComponentNumberFormat}"
                               Minimum="{Binding Minimum, ElementName=Component1Slider}"
                               Maximum="{Binding Maximum, ElementName=Component1Slider}"
                               Value="{Binding Value, ElementName=Component1Slider}"
                               IsVisible="{TemplateBinding IsComponentTextInputVisible}" />
                <primitives:ColorSlider x:Name="Component1Slider"
                                        Grid.Column="2"
                                        Grid.Row="2"
                                        Orientation="Horizontal"
                                        IsRoundingEnabled="True"
                                        IsSnapToTickEnabled="True"
                                        TickFrequency="1"
                                        ColorComponent="Component1"
                                        ColorModel="{TemplateBinding ColorModel, Mode=OneWay}"
                                        HsvColor="{Binding HsvColor, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                        HorizontalAlignment="Stretch"
                                        VerticalAlignment="Center"
                                        IsVisible="{TemplateBinding IsComponentSliderVisible}" />
                <!-- Component 2 RGB:Green HSV:Saturation -->
                <Border Grid.Column="0"
                        Grid.Row="3"
                        Width="{DynamicResource ColorViewComponentLabelWidth}"
                        Height="{Binding ElementName=Component2NumericUpDown, Path=Bounds.Height}"
                        Background="{DynamicResource TextControlBackgroundDisabled}"
                        BorderBrush="{DynamicResource TextControlBorderBrush}"
                        BorderThickness="1,1,0,1"
                        CornerRadius="4,0,0,4"
                        VerticalAlignment="Center"
                        IsVisible="{TemplateBinding IsComponentTextInputVisible}">
                  <Panel HorizontalAlignment="Center"
                         VerticalAlignment="Center">
                    <TextBlock Foreground="{DynamicResource TextControlForegroundDisabled}"
                               FontWeight="SemiBold"
                               Text="G"
                               IsVisible="{TemplateBinding ColorModel, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static controls:ColorModel.Rgba}, Mode=OneWay}" />
                    <TextBlock Foreground="{DynamicResource TextControlForegroundDisabled}"
                               FontWeight="SemiBold"
                               Text="S"
                               IsVisible="{TemplateBinding ColorModel, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static controls:ColorModel.Hsva}, Mode=OneWay}" />
                  </Panel>
                </Border>
                <NumericUpDown x:Name="Component2NumericUpDown"
                               Grid.Column="1"
                               Grid.Row="3"
                               AllowSpin="True"
                               ShowButtonSpinner="False"
                               Height="32"
                               Width="{DynamicResource ColorViewComponentTextInputWidth}"
                               CornerRadius="0,4,4,0"
                               Margin="0,0,12,0"
                               VerticalAlignment="Center"
                               NumberFormat="{StaticResource ColorViewComponentNumberFormat}"
                               Minimum="{Binding Minimum, ElementName=Component2Slider}"
                               Maximum="{Binding Maximum, ElementName=Component2Slider}"
                               Value="{Binding Value, ElementName=Component2Slider}"
                               IsVisible="{TemplateBinding IsComponentTextInputVisible}" />
                <primitives:ColorSlider x:Name="Component2Slider"
                                        Grid.Column="2"
                                        Grid.Row="3"
                                        Orientation="Horizontal"
                                        IsRoundingEnabled="True"
                                        IsSnapToTickEnabled="True"
                                        TickFrequency="1"
                                        ColorComponent="Component2"
                                        ColorModel="{TemplateBinding ColorModel, Mode=OneWay}"
                                        HsvColor="{Binding HsvColor, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                        HorizontalAlignment="Stretch"
                                        VerticalAlignment="Center"
                                        IsVisible="{TemplateBinding IsComponentSliderVisible}" />
                <!-- Component 3 RGB:Blue HSV:Value -->
                <Border Grid.Column="0"
                        Grid.Row="4"
                        Width="{DynamicResource ColorViewComponentLabelWidth}"
                        Height="{Binding ElementName=Component3NumericUpDown, Path=Bounds.Height}"
                        Background="{DynamicResource TextControlBackgroundDisabled}"
                        BorderBrush="{DynamicResource TextControlBorderBrush}"
                        BorderThickness="1,1,0,1"
                        CornerRadius="4,0,0,4"
                        VerticalAlignment="Center"
                        IsVisible="{TemplateBinding IsComponentTextInputVisible}">
                  <Panel HorizontalAlignment="Center"
                         VerticalAlignment="Center">
                    <TextBlock Foreground="{DynamicResource TextControlForegroundDisabled}"
                               FontWeight="SemiBold"
                               Text="B"
                               IsVisible="{TemplateBinding ColorModel, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static controls:ColorModel.Rgba}, Mode=OneWay}" />
                    <TextBlock Foreground="{DynamicResource TextControlForegroundDisabled}"
                               FontWeight="SemiBold"
                               Text="V"
                               IsVisible="{TemplateBinding ColorModel, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static controls:ColorModel.Hsva}, Mode=OneWay}" />
                  </Panel>
                </Border>
                <NumericUpDown x:Name="Component3NumericUpDown"
                               Grid.Column="1"
                               Grid.Row="4"
                               AllowSpin="True"
                               ShowButtonSpinner="False"
                               Height="32"
                               Width="{DynamicResource ColorViewComponentTextInputWidth}"
                               CornerRadius="0,4,4,0"
                               Margin="0,0,12,0"
                               VerticalAlignment="Center"
                               NumberFormat="{StaticResource ColorViewComponentNumberFormat}"
                               Minimum="{Binding Minimum, ElementName=Component3Slider}"
                               Maximum="{Binding Maximum, ElementName=Component3Slider}"
                               Value="{Binding Value, ElementName=Component3Slider}"
                               IsVisible="{TemplateBinding IsComponentTextInputVisible}" />
                <primitives:ColorSlider x:Name="Component3Slider"
                                        Grid.Column="2"
                                        Grid.Row="4"
                                        Orientation="Horizontal"
                                        IsRoundingEnabled="True"
                                        IsSnapToTickEnabled="True"
                                        TickFrequency="1"
                                        ColorComponent="Component3"
                                        ColorModel="{TemplateBinding ColorModel, Mode=OneWay}"
                                        HsvColor="{Binding HsvColor, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                        HorizontalAlignment="Stretch"
                                        VerticalAlignment="Center"
                                        IsVisible="{TemplateBinding IsComponentSliderVisible}" />
                <!-- Alpha Component -->
                <Border Grid.Column="0"
                        Grid.Row="5"
                        Width="{DynamicResource ColorViewComponentLabelWidth}"
                        Height="{Binding ElementName=AlphaComponentNumericUpDown, Path=Bounds.Height}"
                        Background="{DynamicResource TextControlBackgroundDisabled}"
                        BorderBrush="{DynamicResource TextControlBorderBrush}"
                        BorderThickness="1,1,0,1"
                        CornerRadius="4,0,0,4"
                        VerticalAlignment="Center"
                        IsEnabled="{TemplateBinding IsAlphaEnabled}">
                  <TextBlock x:Name="AlphaComponentTextBlock"
                             Foreground="{DynamicResource TextControlForegroundDisabled}"
                             FontWeight="SemiBold"
                             Text="A"
                             HorizontalAlignment="Center"
                             VerticalAlignment="Center" />
                  <Border.IsVisible>
                    <MultiBinding Converter="{x:Static BoolConverters.And}">
                      <Binding RelativeSource="{RelativeSource TemplatedParent}"
                               Path="IsAlphaVisible" />
                      <Binding RelativeSource="{RelativeSource TemplatedParent}"
                               Path="IsComponentTextInputVisible" />
                    </MultiBinding>
                  </Border.IsVisible>
                </Border>
                <NumericUpDown x:Name="AlphaComponentNumericUpDown"
                               Grid.Column="1"
                               Grid.Row="5"
                               AllowSpin="True"
                               ShowButtonSpinner="False"
                               Height="32"
                               Width="{DynamicResource ColorViewComponentTextInputWidth}"
                               CornerRadius="0,4,4,0"
                               Margin="0,0,12,0"
                               VerticalAlignment="Center"
                               NumberFormat="{StaticResource ColorViewComponentNumberFormat}"
                               Minimum="{Binding Minimum, ElementName=AlphaComponentSlider}"
                               Maximum="{Binding Maximum, ElementName=AlphaComponentSlider}"
                               Value="{Binding Value, ElementName=AlphaComponentSlider}"
                               IsEnabled="{TemplateBinding IsAlphaEnabled}">
                  <NumericUpDown.IsVisible>
                    <MultiBinding Converter="{x:Static BoolConverters.And}">
                      <Binding RelativeSource="{RelativeSource TemplatedParent}"
                               Path="IsAlphaVisible" />
                      <Binding RelativeSource="{RelativeSource TemplatedParent}"
                               Path="IsComponentTextInputVisible" />
                    </MultiBinding>
                  </NumericUpDown.IsVisible>
                </NumericUpDown>
                <primitives:ColorSlider x:Name="AlphaComponentSlider"
                                        Grid.Column="2"
                                        Grid.Row="5"
                                        Orientation="Horizontal"
                                        IsRoundingEnabled="True"
                                        IsSnapToTickEnabled="True"
                                        TickFrequency="1"
                                        ColorComponent="Alpha"
                                        ColorModel="{TemplateBinding ColorModel, Mode=OneWay}"
                                        HsvColor="{Binding HsvColor, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                        HorizontalAlignment="Stretch"
                                        VerticalAlignment="Center"
                                        IsEnabled="{TemplateBinding IsAlphaEnabled}">
                  <primitives:ColorSlider.IsVisible>
                    <MultiBinding Converter="{x:Static BoolConverters.And}">
                      <Binding RelativeSource="{RelativeSource TemplatedParent}"
                               Path="IsAlphaVisible" />
                      <Binding RelativeSource="{RelativeSource TemplatedParent}"
                               Path="IsComponentSliderVisible" />
                    </MultiBinding>
                  </primitives:ColorSlider.IsVisible>
                </primitives:ColorSlider>
              </Grid>
            </TabItem>
          </TabControl>
          <!-- Previewer -->
          <!-- Note that top/bottom margins have -5 to remove for drop shadow padding -->
          <primitives:ColorPreviewer Grid.Row="1"
                                     HsvColor="{Binding HsvColor, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                     IsAccentColorsVisible="{TemplateBinding IsAccentColorsVisible}"
                                     Margin="12,-5,12,7"
                                     IsVisible="{TemplateBinding IsColorPreviewVisible}" />
        </Grid>
      </ControlTemplate>
    </Setter>
  </ControlTheme>

  <ControlTheme x:Key="{x:Type ColorPicker}"
                TargetType="ColorPicker">
    <Setter Property="CornerRadius" Value="{DynamicResource ControlCornerRadius}" />
    <Setter Property="Height" Value="32" />
    <Setter Property="Width" Value="64" />
    <Setter Property="MinWidth" Value="64" />
    <Setter Property="Palette">
      <controls:FluentColorPalette />
    </Setter>
    <Setter Property="Template">
      <ControlTemplate TargetType="{x:Type ColorPicker}">
        <DropDownButton CornerRadius="{TemplateBinding CornerRadius}"
                        Height="{TemplateBinding Height}"
                        Width="{TemplateBinding Width}"
                        HorizontalContentAlignment="Stretch"
                        VerticalContentAlignment="Stretch"
                        Padding="0,0,10,0"
                        UseLayoutRounding="False">
          <DropDownButton.Styles>
            <Style Selector="FlyoutPresenter.nopadding">
              <Setter Property="Padding" Value="0" />
            </Style>
          </DropDownButton.Styles>
          <DropDownButton.Content>
            <!-- Preview color -->
            <Panel>
              <Border Background="{StaticResource ColorControlCheckeredBackgroundBrush}"
                      CornerRadius="{TemplateBinding CornerRadius, Converter={StaticResource LeftCornerRadiusFilterConverter}}"
                      HorizontalAlignment="Stretch"
                      VerticalAlignment="Stretch"
                      Margin="1,1,0,1" />
              <Border Background="{TemplateBinding HsvColor, Converter={StaticResource ToBrushConverter}}"
                      CornerRadius="{TemplateBinding CornerRadius, Converter={StaticResource LeftCornerRadiusFilterConverter}}"
                      HorizontalAlignment="Stretch"
                      VerticalAlignment="Stretch"
                      Margin="1,1,0,1" />
            </Panel>
          </DropDownButton.Content>
          <DropDownButton.Flyout>
            <Flyout FlyoutPresenterClasses="nopadding">
              <ColorView x:Name="FlyoutColorView"
                         Color="{Binding Color, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                         ColorModel="{Binding ColorModel, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                         ColorSpectrumComponents="{TemplateBinding ColorSpectrumComponents}"
                         ColorSpectrumShape="{TemplateBinding ColorSpectrumShape}"
                         HsvColor="{Binding HsvColor, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                         IsAccentColorsVisible="{TemplateBinding IsAccentColorsVisible}"
                         IsAlphaEnabled="{TemplateBinding IsAlphaEnabled}"
                         IsAlphaVisible="{TemplateBinding IsAlphaVisible}"
                         IsColorComponentsVisible="{TemplateBinding IsColorComponentsVisible}"
                         IsColorModelVisible="{TemplateBinding IsColorModelVisible}"
                         IsColorPaletteVisible="{TemplateBinding IsColorPaletteVisible}"
                         IsColorPreviewVisible="{TemplateBinding IsColorPreviewVisible}"
                         IsColorSpectrumVisible="{TemplateBinding IsColorSpectrumVisible}"
                         IsColorSpectrumSliderVisible="{TemplateBinding IsColorSpectrumSliderVisible}"
                         IsComponentSliderVisible="{TemplateBinding IsComponentSliderVisible}"
                         IsComponentTextInputVisible="{TemplateBinding IsComponentTextInputVisible}"
                         IsHexInputVisible="{TemplateBinding IsHexInputVisible}"
                         MaxHue="{TemplateBinding MaxHue}"
                         MaxSaturation="{TemplateBinding MaxSaturation}"
                         MaxValue="{TemplateBinding MaxValue}"
                         MinHue="{TemplateBinding MinHue}"
                         MinSaturation="{TemplateBinding MinSaturation}"
                         MinValue="{TemplateBinding MinValue}"
                         PaletteColors="{TemplateBinding PaletteColors}"
                         PaletteColumnCount="{TemplateBinding PaletteColumnCount}"
                         Palette="{TemplateBinding Palette}"
                         SelectedIndex="{Binding SelectedIndex, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}">
                <ColorView.Resources>
                  <!-- This radius must follow OverlayCornerRadius -->
                  <CornerRadius x:Key="ColorViewTabBackgroundCornerRadius">5,5,0,0</CornerRadius>
                </ColorView.Resources>
              </ColorView>
            </Flyout>
          </DropDownButton.Flyout>
        </DropDownButton>
      </ControlTemplate>
    </Setter>
  </ControlTheme>

</ResourceDictionary>
